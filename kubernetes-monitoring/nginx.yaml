apiVersion: v1
kind: ConfigMap
metadata:
 name: nginx-configmap
data:
 nginx.conf: |
   user nginx;
   worker_processes auto;
   error_log /var/log/nginx/error.log;
   pid /run/nginx.pid;

   events {
      worker_connections 1024;
   }

   http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    default_type        application/octet-stream;

    server {
        listen      80;
        server_name _;

        location = /basic_status {
           stub_status;
        }

        location / {
           autoindex on;
           autoindex_exact_size off;
           autoindex_localtime on;
        }
    }
   }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9113'
    spec:
     containers:
     - name: nginx
       image: garamer/nginx:v.1.0
       ports:
         - containerPort: 80
       volumeMounts:
       - name: config-nginx
         mountPath: /etc/nginx/
     - name: nginx-exporter
       image: nginx/nginx-prometheus-exporter:0.10.0
       args:
        - '-nginx.scrape-uri=http://51.250.36.38/basic_status'
       ports:
         - containerPort: 9113
     volumes:
     - name: config-nginx
       configMap:
         name: nginx-configmap

---
apiVersion: v1
kind: Service
metadata:
 name: nginx-service
 labels:
   app: nginx
 annotations:
   prometheus.io/scrape: 'true'
   prometheus.io/port: '9113'
   prometheus.io/scheme: http
spec:
 selector:
  app: nginx
 type: ClusterIP
 ports:
  - name: nginx
    port: 80
    targetPort: 80
  - name: nginx-exporter
    port: 8081
    targetPort: 9113

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: my.host.ru
    http:
      paths:
      - path: /metrics
        pathType: Prefix
        backend:
          service:
           name: nginx-service
           port:
            number: 8081
      - path: /
        pathType: Prefix
        backend:
          service:
           name: nginx-service
           port:
            number: 80
